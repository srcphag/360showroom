<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VVVV.Audio.Signals</name>
    </assembly>
    <members>
        <member name="T:VVVV.Audio.BufferAudioSignal">
            <summary>
            Base class for nodes which work with buffers
            </summary>
        </member>
        <member name="T:VVVV.Audio.R8BrainResamplerResolution">
            <summary>
            Selects the resampler resolution
            </summary>
        </member>
        <member name="F:VVVV.Audio.R8BrainResamplerResolution.R8Brain16">
            <summary>
            16-bit precision resampler
            </summary>
        </member>
        <member name="F:VVVV.Audio.R8BrainResamplerResolution.R8Brain16IR">
            <summary>
            16-bit precision resampler for impulse responses
            </summary>
        </member>
        <member name="F:VVVV.Audio.R8BrainResamplerResolution.R8Brain24">
            <summary>
            24-bit precision resampler (including 32-bit floating point)
            </summary>
        </member>
        <member name="T:VVVV.Audio.R8BrainSampleRateConverter">
            <summary>
            Managed wrapper class for the high quality sample rate converter r8brain from Aleksey Vaneev of Voxengo
            </summary>
        </member>
        <member name="F:VVVV.Audio.R8BrainSampleRateConverter.FUnmanagedInstance">
            <summary>
            Reference to the actual unmanaged resampler
            </summary>
        </member>
        <member name="F:VVVV.Audio.R8BrainSampleRateConverter.FOutBufferPtr">
            <summary>
            This will receive the pointer to the output buffer, reusing it as recommeded
            </summary>
        </member>
        <member name="M:VVVV.Audio.R8BrainSampleRateConverter.#ctor(System.Double,System.Double,System.Int32,System.Double,VVVV.Audio.R8BrainResamplerResolution)">
            <summary>
            Function creates a new linear-phase resampler object
            </summary>
            
            <param name="srcSampleRate">Source signal sample rate. Both sample rates can be 
            specified as a ratio, e.g. SrcSampleRate = 1.0, DstSampleRate = 2.0.</param>
            
            <param name="dstSampleRate">Destination signal sample rate</param>
            
            <param name="maxInputBufferLength">The maximal planned length of the input buffer (in samples) 
            that will be passed to the resampler. The resampler relies on this value as
            it allocates intermediate buffers. Input buffers longer than this value
            should never be supplied to the resampler. Note that the resampler may use
            the input buffer itself for intermediate sample data storage.</param>
            
            <param name="reqTransBand">Required transition band, in percent of the
            spectral space of the input signal (or the output signal if
            downsampling is performed) between filter's -3 dB point and the Nyquist
            frequency. The range is from CDSPFIRFilter::getLPMinTransBand() to
            CDSPFIRFilter::getLPMaxTransBand(), inclusive. When upsampling 88200 or
            96000 audio to a higher sample rates the ReqTransBand can be
            considerably increased, up to 30. The selection of ReqTransBand depends
            on the level of desire to preserve the high-frequency content. While
            values 0.5 to 2 are extremely "greedy" settings, not necessary in most
            cases, values 2 to 3 can be used in most cases. Values 3 to 4 are
            relaxed settings, but they still offer a flat frequency response up to
            21kHz with 44.1k source or destination sample rate.</param>
            
            <param name="resolution">Resampler's required resolution</param>
        </member>
        <member name="P:VVVV.Audio.R8BrainSampleRateConverter.SourcRate">
            <summary>
            The source rate set on creation
            </summary>
        </member>
        <member name="P:VVVV.Audio.R8BrainSampleRateConverter.DestinationRate">
            <summary>
            The destination rate set on creation
            </summary>
        </member>
        <member name="P:VVVV.Audio.R8BrainSampleRateConverter.RequiredTransitionBand">
            <summary>
            Required transition band, in percent of the
            spectral space of the input signal (or the output signal if
            downsampling is performed) between filter's -3 dB point and the Nyquist
            frequency.
            </summary>
        </member>
        <member name="P:VVVV.Audio.R8BrainSampleRateConverter.Latency">
            <summary>
            Returns the number of samples that should be passed to the resampler object before the actual output starts
            </summary>
        </member>
        <member name="M:VVVV.Audio.R8BrainSampleRateConverter.Clear">
            <summary>
            Function clears (resets) the state of the resampler object and returns it 
            to the state after construction. All input data accumulated in the
            internal buffer of this resampler object so far will be discarded.
            </summary>
        </member>
        <member name="M:VVVV.Audio.R8BrainSampleRateConverter.Process(System.Double[],System.Double[]@)">
            <summary>
            Function performs sample rate conversion.
            If the source and destination sample rates are equal, the resampler will do
            nothing and will simply return the input buffer unchanged.
            
            You do not need to allocate an intermediate output buffer for use with this
            function. If required, the resampler will allocate a suitable intermediate
            output buffer itself.
            </summary>
            
            <param name="input">Input buffer. This buffer may be used as output buffer by this function.</param>
            
            <param name="output">This variable receives the pointer to the resampled data.
            This pointer may point to the address within the "ip0" input buffer, or to
            *this object's internal buffer. In real-time applications it is suggested
            to pass this pointer to the next output audio block and consume any data
            left from the previous output audio block first before calling the
            process() function again. The buffer pointed to by the "op0" on return may
            be owned by the resampler, so it should not be freed by the caller.</param>
            
            <returns>The number of samples available in the output buffer. If the
            data from the output buffer is going to be written to a bigger output
            buffer, it is suggested to check the returned number of samples so that no
            overflow of the bigger output buffer happens.</returns>
        </member>
        <member name="T:VVVV.Audio.R8BrainDLLWrapper">
            <summary>
            Static wrapper for the r8bsrc.dll
            </summary>
        </member>
        <member name="P:VVVV.Audio.ResampleSignal.Latency">
            <summary>
            The converter input latency
            </summary>
        </member>
        <member name="T:VVVV.Audio.WaveShaperSignal">
            <summary>
            Description of ValueToAudioSignal.
            </summary>
        </member>
        <member name="T:VVVV.Audio.OnePoleLowPassSignal">
            <summary>
            Description of ValueToAudioSignal.
            </summary>
        </member>
        <member name="P:VVVV.Audio.MultiChannelInputSignal.Input">
            <summary>
            The input signal
            </summary>
        </member>
        <member name="M:VVVV.Audio.MultiChannelInputSignal.InputWasSet(VVVV.PluginInterfaces.V2.ISpread{VVVV.Audio.AudioSignal})">
            <summary>
            Override in sub class to know when the input has changed
            </summary>
            <param name="newInput"></param>
        </member>
        <member name="T:VVVV.Audio.IFFTSignal">
            <summary>
            Description of IFFTSignal.
            </summary>
        </member>
        <member name="M:VVVV.Audio.GranulatorFilePool.FlushFiles">
            <summary>
            Removes files with no reference from RAM
            </summary>
        </member>
        <member name="P:VVVV.Audio.Grain.Start">
            <summary>
            Gets or sets the start in the file in seconds
            </summary>
        </member>
        <member name="P:VVVV.Audio.Grain.StartRandomization">
            <summary>
            Gets or sets the start randomization per cycle in the file in seconds
            </summary>
        </member>
        <member name="P:VVVV.Audio.Grain.Length">
            <summary>
            Gets or sets the length of the grain
            </summary>
        </member>
        <member name="P:VVVV.Audio.Grain.Freq">
            <summary>
            Gets or sets the playback frequency of the grain in Hz
            </summary>
        </member>
        <member name="P:VVVV.Audio.Grain.BaseFreq">
            <summary>
            Gets the base frequency in Hz defined by the length
            </summary>
        </member>
        <member name="T:VVVV.Audio.ValueToAudioSignal">
            <summary>
            Description of ValueToAudioSignal.
            </summary>
        </member>
        <member name="T:VVVV.Audio.WaveTableSignal">
            <summary>
            Class for LUT playback
            </summary>
        </member>
    </members>
</doc>
